import { useNavigate } from 'react-router-dom';
import Header from '@/components/Header';
import Footer from '@/components/Footer';
import { useAuth } from '@/hooks/useAuth';
import { useState } from 'react';
import AdminPanel from '@/components/AdminPanel';
import { useAnime } from '@/hooks/useAnime';
import { Input } from '@/components/ui/input';

const genres = [
  { name: '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', emoji: 'üó∫Ô∏è', description: '–ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è' },
  { name: '–≠–∫—à–µ–Ω', emoji: '‚öîÔ∏è', description: '–ë–∏—Ç–≤—ã –∏ –¥–∏–Ω–∞–º–∏—á–Ω—ã–µ —Å—Ü–µ–Ω—ã' },
  { name: '–§—ç–Ω—Ç–µ–∑–∏', emoji: 'üßô', description: '–ú–∞–≥–∏—è –∏ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–µ –º–∏—Ä—ã' },
  { name: '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', emoji: 'üöÄ', description: '–ö–æ—Å–º–æ—Å –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±—É–¥—É—â–µ–≥–æ' },
  { name: '–ö–æ–º–µ–¥–∏—è', emoji: 'üòÇ', description: '–Æ–º–æ—Ä –∏ —Å–º–µ—à–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏' },
  { name: '–î—Ä–∞–º–∞', emoji: 'üé≠', description: '–ì–ª—É–±–æ–∫–∏–µ —ç–º–æ—Ü–∏–∏ –∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è' },
];

export default function Genres() {
  const navigate = useNavigate();
  const auth = useAuth();
  const anime = useAnime();
  const [isLoginOpen, setIsLoginOpen] = useState(false);
  const [isRegisterOpen, setIsRegisterOpen] = useState(false);
  const [isAdminOpen, setIsAdminOpen] = useState(false);

  const handleLoginSubmit = async () => {
    const success = await auth.handleLogin();
    if (success) setIsLoginOpen(false);
  };

  const handleRegisterSubmit = async () => {
    const success = await auth.handleRegister();
    if (success) setIsRegisterOpen(false);
  };

  const handleCreateAnime = async () => {
    await anime.handleCreateAnime();
  };

  const handleDeleteAnime = async (id: number) => {
    await anime.handleDeleteAnime(id);
  };

  const handleUpdateAnime = async (animeData: any) => {
    await anime.handleUpdateAnime(animeData);
  };

  const loginDialogContent = (
    <div className="space-y-4 py-4">
      <Input 
        placeholder="Email" 
        type="email" 
        value={auth.loginEmail}
        onChange={(e) => auth.setLoginEmail(e.target.value)}
      />
      <Input 
        placeholder="–ü–∞—Ä–æ–ª—å" 
        type="password"
        value={auth.loginPassword}
        onChange={(e) => auth.setLoginPassword(e.target.value)}
      />
      <button className="w-full bg-primary text-primary-foreground py-2 rounded-md" onClick={handleLoginSubmit}>–í–æ–π—Ç–∏</button>
      <p className="text-sm text-center text-muted-foreground">
        –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <button onClick={() => { setIsLoginOpen(false); setIsRegisterOpen(true); }} className="text-primary hover:underline">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
      </p>
    </div>
  );

  const registerDialogContent = (
    <div className="space-y-4 py-4">
      <Input 
        placeholder="Email" 
        type="email" 
        value={auth.loginEmail}
        onChange={(e) => auth.setLoginEmail(e.target.value)}
      />
      <Input 
        placeholder="–ü–∞—Ä–æ–ª—å" 
        type="password"
        value={auth.loginPassword}
        onChange={(e) => auth.setLoginPassword(e.target.value)}
      />
      <button className="w-full bg-primary text-primary-foreground py-2 rounded-md" onClick={handleRegisterSubmit}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
    </div>
  );

  const adminPanelContent = (
    <AdminPanel
      newAnime={anime.newAnime}
      onNewAnimeChange={anime.setNewAnime}
      onCreateAnime={handleCreateAnime}
      animeList={anime.animeList}
      onDeleteAnime={handleDeleteAnime}
      onUpdateAnime={handleUpdateAnime}
      onChangePassword={auth.handleChangePassword}
      onUploadVideo={anime.handleUploadVideo}
      onUploadThumbnail={anime.handleUploadThumbnail}
    />
  );

  return (
    <div className="min-h-screen bg-background">
      <Header
        user={auth.user}
        isAdminOpen={isAdminOpen}
        setIsAdminOpen={setIsAdminOpen}
        isLoginOpen={isLoginOpen}
        setIsLoginOpen={setIsLoginOpen}
        isRegisterOpen={isRegisterOpen}
        setIsRegisterOpen={setIsRegisterOpen}
        onLogout={auth.handleLogout}
        adminPanelContent={adminPanelContent}
        loginDialogContent={loginDialogContent}
        registerDialogContent={registerDialogContent}
      />

      <div className="container mx-auto px-4 py-8">
        <h1 className="text-4xl font-bold mb-8 text-center">–ñ–∞–Ω—Ä—ã –∞–Ω–∏–º–µ</h1>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {genres.map((genre) => (
            <div
              key={genre.name}
              onClick={() => navigate(`/anime?genre=${genre.name}`)}
              className="bg-card hover:bg-accent rounded-lg p-6 cursor-pointer transition-all hover:scale-105 shadow-lg"
            >
              <div className="text-6xl mb-4 text-center">{genre.emoji}</div>
              <h2 className="text-2xl font-bold mb-2 text-center">{genre.name}</h2>
              <p className="text-muted-foreground text-center">{genre.description}</p>
            </div>
          ))}
        </div>
      </div>

      <Footer />
    </div>
  );
}
